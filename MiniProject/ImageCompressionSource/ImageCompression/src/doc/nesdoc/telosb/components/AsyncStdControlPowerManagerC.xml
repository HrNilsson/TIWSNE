<?xml version="1.0" ?><component abstract="" loc="67:/home/kasper/tinyos-main//tos/lib/power/AsyncStdControlPowerManagerC.nc" nicename="AsyncStdControlPowerManagerC" qname="AsyncStdControlPowerManagerC">
      <documentation loc="41:/home/kasper/tinyos-main//tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>
 Please refer to TEP 115 for more information about this component and its
 intended use.&lt;br&gt;&lt;br&gt;

 This is the internal implementation of the standard power management
 policy for managing the power states of non-virtualized devices.</short>
        <long>
 Please refer to TEP 115 for more information about this component and its
 intended use.&lt;br&gt;&lt;br&gt;

 This is the internal implementation of the standard power management
 policy for managing the power states of non-virtualized devices.
 Non-virtualized devices are shared using a parameterized Resource
 interface, and are powered down according to some policy whenever there
 are no more pending requests to that Resource.  The policy implemented
 by this component is to power down a device as soon as it becomes free.
 Such a policy is useful whenever a device has a negligible wake-up
 latency.  There is no cost associated with waiting for the device to
 power up, so it can be powered on and off as often as possible.&lt;br&gt;&lt;br&gt;

 Powerdown of the device is done through the &lt;code&gt;AsyncStdControl&lt;/code&gt;
 interface, so this component can only be used with those devices that
 provide that interface.&lt;br&gt;&lt;br&gt;

 For devices providing either the &lt;code&gt;StdControl&lt;/code&gt; or
 &lt;code&gt;SplitControl&lt;/code&gt; interfaces, please use either the
 &lt;code&gt;StdControlPowerManagerC&lt;/code&gt; component or the
 &lt;code&gt;SplitControlPowerManagerC&lt;/code&gt; component respectively.
 
 @author Kevin Klues (klueska@cs.wustl.edu)
</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
      <wiring>
        <wire loc="80:/home/kasper/tinyos-main//tos/lib/power/AsyncStdControlPowerManagerC.nc">
          <from><interface-ref name="AsyncStdControl" ref="0x2ac2c451e7d0" scoped=""/></from>
          <to><interface-ref name="AsyncStdControl" ref="0x2ac2c4523830" scoped=""/></to>
        </wire>
        <wire loc="82:/home/kasper/tinyos-main//tos/lib/power/AsyncStdControlPowerManagerC.nc">
          <from><interface-ref name="PowerDownCleanup" ref="0x2ac2c451d020" scoped=""/></from>
          <to><interface-ref name="PowerDownCleanup" ref="0x2ac2c4521020" scoped=""/></to>
        </wire>
        <wire loc="84:/home/kasper/tinyos-main//tos/lib/power/AsyncStdControlPowerManagerC.nc">
          <from><interface-ref name="ResourceDefaultOwner" ref="0x2ac2c451d5b8" scoped=""/></from>
          <to><interface-ref name="ResourceDefaultOwner" ref="0x2ac2c4521688" scoped=""/></to>
        </wire>
        <wire loc="85:/home/kasper/tinyos-main//tos/lib/power/AsyncStdControlPowerManagerC.nc">
          <from><interface-ref name="ArbiterInfo" ref="0x2ac2c458d268" scoped=""/></from>
          <to><interface-ref name="ArbiterInfo" ref="0x2ac2c45202d8" scoped=""/></to>
        </wire>
      </wiring>
    <specification><interface loc="72:/home/kasper/tinyos-main//tos/lib/power/AsyncStdControlPowerManagerC.nc" name="PowerDownCleanup" provided="0" ref="0x2ac2c4521020">
      <component-ref nicename="AsyncStdControlPowerManagerC" qname="AsyncStdControlPowerManagerC"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="PowerDownCleanup" ref="0x2ac2c4521020" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="PowerDownCleanup" qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" ref="0x2ac2c4521370" scoped=""/>
      </interface-functions>
    </interface><interface loc="73:/home/kasper/tinyos-main//tos/lib/power/AsyncStdControlPowerManagerC.nc" name="ResourceDefaultOwner" provided="0" ref="0x2ac2c4521688">
      <component-ref nicename="AsyncStdControlPowerManagerC" qname="AsyncStdControlPowerManagerC"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="ResourceDefaultOwner" ref="0x2ac2c4521688" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="ResourceDefaultOwner" qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" ref="0x2ac2c45219d8" scoped=""/>
        <function-ref name="requested" ref="0x2ac2c4521b60" scoped=""/>
        <function-ref name="granted" ref="0x2ac2c4521ce8" scoped=""/>
        <function-ref name="isOwner" ref="0x2ac2c4521e70" scoped=""/>
        <function-ref name="immediateRequested" ref="0x2ac2c4520020" scoped=""/>
      </interface-functions>
    </interface><interface loc="70:/home/kasper/tinyos-main//tos/lib/power/AsyncStdControlPowerManagerC.nc" name="AsyncStdControl" provided="0" ref="0x2ac2c4523830">
      <component-ref nicename="AsyncStdControlPowerManagerC" qname="AsyncStdControlPowerManagerC"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="AsyncStdControl" ref="0x2ac2c4523830" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="AsyncStdControl" qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" ref="0x2ac2c4523b80" scoped=""/>
        <function-ref name="stop" ref="0x2ac2c4523d08" scoped=""/>
      </interface-functions>
    </interface><interface loc="74:/home/kasper/tinyos-main//tos/lib/power/AsyncStdControlPowerManagerC.nc" name="ArbiterInfo" provided="0" ref="0x2ac2c45202d8">
      <component-ref nicename="AsyncStdControlPowerManagerC" qname="AsyncStdControlPowerManagerC"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="ArbiterInfo" ref="0x2ac2c45202d8" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="ArbiterInfo" qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" ref="0x2ac2c4520628" scoped=""/>
        <function-ref name="userId" ref="0x2ac2c45207b0" scoped=""/>
      </interface-functions>
    </interface></specification><referenced><interface loc="64:/home/kasper/tinyos-main//tos/lib/power/AsyncPowerManagerP.nc" name="ArbiterInfo" provided="0" ref="0x2ac2c458d268">
      <component-ref nicename="AsyncStdControlPowerManagerC.PowerManager" qname="AsyncStdControlPowerManagerC.PowerManager"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="ArbiterInfo" ref="0x2ac2c458d268" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="ArbiterInfo" qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" ref="0x2ac2c458d5b8" scoped=""/>
        <function-ref name="userId" ref="0x2ac2c458d740" scoped=""/>
      </interface-functions>
    </interface><interface loc="60:/home/kasper/tinyos-main//tos/lib/power/AsyncPowerManagerP.nc" name="AsyncStdControl" provided="0" ref="0x2ac2c451e7d0">
      <component-ref nicename="AsyncStdControlPowerManagerC.PowerManager" qname="AsyncStdControlPowerManagerC.PowerManager"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="AsyncStdControl" ref="0x2ac2c451e7d0" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="AsyncStdControl" qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" ref="0x2ac2c451eb20" scoped=""/>
        <function-ref name="stop" ref="0x2ac2c451eca8" scoped=""/>
      </interface-functions>
    </interface><interface loc="63:/home/kasper/tinyos-main//tos/lib/power/AsyncPowerManagerP.nc" name="ResourceDefaultOwner" provided="0" ref="0x2ac2c451d5b8">
      <component-ref nicename="AsyncStdControlPowerManagerC.PowerManager" qname="AsyncStdControlPowerManagerC.PowerManager"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="ResourceDefaultOwner" ref="0x2ac2c451d5b8" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="ResourceDefaultOwner" qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" ref="0x2ac2c451d908" scoped=""/>
        <function-ref name="requested" ref="0x2ac2c451da90" scoped=""/>
        <function-ref name="granted" ref="0x2ac2c451dc18" scoped=""/>
        <function-ref name="isOwner" ref="0x2ac2c451dda0" scoped=""/>
        <function-ref name="immediateRequested" ref="0x2ac2c458d020" scoped=""/>
      </interface-functions>
    </interface><interface loc="62:/home/kasper/tinyos-main//tos/lib/power/AsyncPowerManagerP.nc" name="PowerDownCleanup" provided="0" ref="0x2ac2c451d020">
      <component-ref nicename="AsyncStdControlPowerManagerC.PowerManager" qname="AsyncStdControlPowerManagerC.PowerManager"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="PowerDownCleanup" ref="0x2ac2c451d020" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="PowerDownCleanup" qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" ref="0x2ac2c451d370" scoped=""/>
      </interface-functions>
    </interface><component abstract="" loc="58(AsyncStdControlPowerManagerC.PowerManager):/home/kasper/tinyos-main//tos/lib/power/AsyncPowerManagerP.nc" nicename="AsyncStdControlPowerManagerC.PowerManager" qname="AsyncStdControlPowerManagerC.PowerManager">
      <documentation loc="41:/home/kasper/tinyos-main//tos/lib/power/AsyncPowerManagerP.nc">
        <short>
 Please refer to TEP 115 for more information about this component and its
 intended use.&lt;br&gt;&lt;br&gt;

 This is the internal implementation of the standard power management
 policy for managing the power states of non-virtualized devices.</short>
        <long>
 Please refer to TEP 115 for more information about this component and its
 intended use.&lt;br&gt;&lt;br&gt;

 This is the internal implementation of the standard power management
 policy for managing the power states of non-virtualized devices.
 Non-virtualized devices are shared using a parameterized Resource
 interface, and are powered down according to some policy whenever there
 are no more pending requests to that Resource.  The policy implemented
 by this component is to power down a device as soon as it becomes free.
 Such a policy is useful whenever a device has a negligible wake-up
 latency.  There is no cost associated with waiting for the device to
 power up, so it can be powered on and off as often as possible.
 
 @author Kevin Klues (klueska@cs.wustl.edu)
</long>
      </documentation>
      <instance>
        <component-ref nicename="AsyncPowerManagerP" qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component></referenced></component>